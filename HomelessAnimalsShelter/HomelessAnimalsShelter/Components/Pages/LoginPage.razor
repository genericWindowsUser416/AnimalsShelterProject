@page "/login"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using HomelessAnimalsShelter.Core.Models
<div class="container">
        <div class="login-form">
        <h2>Введите ваши данные</h2>
        <EditForm Model="loginModel" OnSubmit="StartLogin" FormName="Login">

        <div class="form-group">
            <label for="username">Логин</label>
            <InputText @bind-Value="loginModel.Login" id="username" name="username" required></InputText>
        </div>

        <div class="form-group">
            <label for="username">Пароль</label>
            <InputText @bind-Value="loginModel.Password" id="password" name="password" required></InputText>
            <button type="submit">LOGIN</button>
        </div>

        </EditForm>
        </div>
</div>
<style>

.accept-btn {
        width: 100%;
        padding: 14px;
        background-color: dodgerblue;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.2s;
}

.accept-btn:hover {
    background-color: dodgerblue;
}

.container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
}

.login-form {
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);

    width: 40%;
}

h2 {
    margin-bottom: 20px;
    text-align: center;
}

.form-group {
    margin-bottom: 15px;
}

input {
    background-color: aliceblue;
    width: 100%;
    padding: 10px;
    border: 2px solid #007bff;
    border-radius: 4px;
    transition: border-color 0.3s;
}

input:focus {
    border-color: #0056b3;
    outline: none;
}
</style>

@code {
    [CascadingParameter]
    public HttpContext httpContext { get; set; }

    [SupplyParameterFromForm]
    public LoginModel loginModel { get; set; } = new LoginModel();

    public async void StartLogin()
    {
        var claims = new List<Claim>()
        {
            new Claim("Name", loginModel.Login),
            new Claim(ClaimTypes.Role, "Prezenent")
        };

        var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        var pr = new ClaimsPrincipal(identity);

        await httpContext.SignInAsync(pr);
    }
}
