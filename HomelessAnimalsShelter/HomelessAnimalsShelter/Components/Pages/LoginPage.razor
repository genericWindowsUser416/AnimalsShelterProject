@page "/login"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using HomelessAnimalsShelter.Core.Models
@using HomelessAnimalsShelter.BLL
@using HomelessAnimalsShelter.Core
<div class="container">
        <div class="login-form">
        <h2>Введите ваши данные</h2>
        <EditForm Model="loginModel" OnSubmit="StartLogin" FormName="Login">

            <div class="form-group">
                <label for="username">Логин</label>
                <InputText @bind-Value="loginModel.Login"/>
            </div>

            <div class="form-group">
                <label for="username">Пароль</label>
                <InputText @bind-Value="loginModel.Password"/>
                <button type="submit">LOGIN</button>
            </div>

        </EditForm>
         </div>
</div>

@code {
    [CascadingParameter]
    public HttpContext httpContext { get; set; }

    [SupplyParameterFromForm]
    public LoginModel loginModel { get; set; } = new LoginModel();
    private UserManager userManager = new UserManager();
    public async void StartLogin()
    {
        //Идем в базу проверяться и тд
        var thisUser = userManager.GetUserByLoginAndPassword(loginModel.Login, loginModel.Password);
        var claims = new List<Claim>(){};
        switch ((UserType)thisUser.UserRole)
        {
            case UserType.Seller:
                Console.WriteLine("вы продавец");
                claims = new List<Claim>()
                {
                    new Claim("Name", loginModel.Login!),
                    new Claim(ClaimTypes.Role, "Seller"),
                    new Claim(ClaimTypes.NameIdentifier, thisUser.Id.ToString())
                };
                break;

            case UserType.Admin:
                Console.WriteLine("вы администратор");
                claims = new List<Claim>()
                {
                    new Claim("Name", loginModel.Login!),
                    new Claim(ClaimTypes.Role, "Admin"),
                    new Claim(ClaimTypes.NameIdentifier, thisUser.Id.ToString())
                };

                break;

            case UserType.Buyer:
                Console.WriteLine("вы покупатель");
                claims = new List<Claim>()
                {
                    new Claim("Name", loginModel.Login!),
                    new Claim(ClaimTypes.Role, "Buyer"),
                    new Claim(ClaimTypes.NameIdentifier, thisUser.Id.ToString())
                };
                break;

            default:
                break;
        }



        var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        var pr = new ClaimsPrincipal(identity);

        await httpContext.SignInAsync(pr);
    }
}

<style>

    .accept-btn {
        width: 100%;
        padding: 14px;
        background-color: dodgerblue;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .accept-btn:hover {
            background-color: dodgerblue;
        }

    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
    }

    .login-form {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        width: 40%;
    }

    h2 {
        margin-bottom: 20px;
        text-align: center;
    }

    .form-group {
        margin-bottom: 15px;
    }

    input {
        background-color: aliceblue;
        width: 100%;
        padding: 10px;
        border: 2px solid #007bff;
        border-radius: 4px;
        transition: border-color 0.3s;
    }

        input:focus {
            border-color: #0056b3;
            outline: none;
        }
</style>